{"version":3,"sources":["images/we.jpg","service/Api.jsx","components/Information.jsx","components/Form.jsx","components/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["getData","city","country","a","axios","get","useStyles","makeStyles","component","margin","row","padding","fontSize","letterSpacing","value","color","icon","marginRight","Information","weatherData","classes","Box","className","Typography","name","sys","main","temp","Opacity","humidity","Brightness5","Date","sunrise","toLocaleTimeString","Brightness6","sunset","Cloud","clouds","all","Dehaze","weather","background","borderRadius","input","button","height","width","marginTop","Form","useState","setWeatherData","setCity","setCountry","click","setClick","useEffect","then","response","data","console","log","getWeather","TextField","label","inputProps","onChange","e","target","Button","onClick","variant","display","alignItems","leftContainer","backgroundImage","logo","backgroundSize","rightContainer","backgroundColor","Weather","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAAe,MAA0B,+B,oECW5BA,EAAO,uCAAG,WAAOC,EAAMC,GAAb,SAAAC,EAAA,sEAGVC,IAAMC,IAAN,UAVD,kDAUC,cAAsBJ,EAAtB,YAA8BC,EAA9B,kBANG,mCAMH,kBAHU,mFAAH,wD,+FCJdI,EAAYC,YAAW,CACzBC,UAAW,CACPC,OAAQ,QAEZC,IAAK,CACDC,QAAS,GACTC,SAAU,GACVC,cAAe,GAEnBC,MAAO,CACHC,MAAO,cAEXC,KAAM,CACFC,YAAa,GACbF,MAAO,iBAKA,SAASG,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAC5BC,EAAUd,IAChB,OACIa,EACI,eAACE,EAAA,EAAD,CAAKC,UAAWF,EAAQZ,UAAxB,UACI,eAACe,EAAA,EAAD,CAAYD,UAAWF,EAAQV,IAA/B,UAAoC,cAAC,IAAD,CAAgBY,UAAWF,EAAQJ,OAAvE,aAAyF,eAACK,EAAA,EAAD,CAAKC,UAAWF,EAAQN,MAAON,UAAU,OAAzC,UAAiDW,EAAYK,KAA7D,KAAqEL,EAAYM,IAAIvB,WAA9K,OACA,eAACqB,EAAA,EAAD,CAAYD,UAAWF,EAAQV,IAA/B,UAAoC,cAAC,IAAD,CAAwBY,UAAWF,EAAQJ,OAA/E,gBAAoG,eAACK,EAAA,EAAD,CAAKC,UAAWF,EAAQN,MAAON,UAAU,OAAzC,UAAiDW,EAAYO,KAAKC,KAAlE,eACpG,eAACJ,EAAA,EAAD,CAAYD,UAAWF,EAAQV,IAA/B,UAAoC,cAACkB,EAAA,EAAD,CAASN,UAAWF,EAAQJ,OAAhE,aAAkF,eAACK,EAAA,EAAD,CAAKC,UAAWF,EAAQN,MAAON,UAAU,OAAzC,UAAiDW,EAAYO,KAAKG,SAAlE,WAClF,eAACN,EAAA,EAAD,CAAYD,UAAWF,EAAQV,IAA/B,UAAoC,cAACoB,EAAA,EAAD,CAAaR,UAAWF,EAAQJ,OAApE,aAAsF,eAACK,EAAA,EAAD,CAAKC,UAAWF,EAAQN,MAAON,UAAU,OAAzC,UAAiD,IAAIuB,KAA+B,IAA1BZ,EAAYM,IAAIO,SAAgBC,qBAA1F,YACtF,eAACV,EAAA,EAAD,CAAYD,UAAWF,EAAQV,IAA/B,UAAoC,cAACwB,EAAA,EAAD,CAAaZ,UAAWF,EAAQJ,OAApE,YAAqF,eAACK,EAAA,EAAD,CAAKC,UAAWF,EAAQN,MAAON,UAAU,OAAzC,UAAiD,IAAIuB,KAA8B,IAAzBZ,EAAYM,IAAIU,QAAeF,qBAAzF,YACrF,eAACV,EAAA,EAAD,CAAYD,UAAWF,EAAQV,IAA/B,UAAoC,cAAC0B,EAAA,EAAD,CAAOd,UAAWF,EAAQJ,OAA9D,WAA8E,eAACK,EAAA,EAAD,CAAKC,UAAWF,EAAQN,MAAON,UAAU,OAAzC,UAAiDW,EAAYkB,OAAOC,IAApE,WAC9E,eAACf,EAAA,EAAD,CAAYD,UAAWF,EAAQV,IAA/B,UAAoC,cAAC6B,EAAA,EAAD,CAAQjB,UAAWF,EAAQJ,OAA/D,cAAkF,cAACK,EAAA,EAAD,CAAKC,UAAWF,EAAQN,MAAON,UAAU,OAAzC,SAAiDW,EAAYqB,QAAQ,GAAGd,aACrJ,GCjCrB,IAAMpB,EAAYC,YAAW,CACzBC,UAAW,CACPG,QAAS,OACT8B,WAAY,OACZC,aAAc,cAIlBC,MAAO,CACH5B,MAAO,QACPE,YAAa,QAGjB2B,OAAQ,CACJC,OAAQ,GACRC,MAAO,IACPL,WAAY,OACZ1B,MAAO,QACPgC,UAAW,KAKJ,SAASC,IACpB,IAAM5B,EAAUd,IAChB,EAAsC2C,qBAAtC,mBAAO9B,EAAP,KAAoB+B,EAApB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOhD,EAAP,KAAakD,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAO/C,EAAP,KAAgBkD,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,YACU,uCAAG,sBAAApD,EAAA,8DACfF,GADe,qCACDD,EAAQC,EAAMC,GACvBsD,MAAK,SAAAC,GACFP,EAAeO,EAASC,MACxBC,QAAQC,IAAIH,EAASC,SAJd,2CAAH,qDAOhBG,GACAP,GAAS,KACV,CAACD,IAWJ,OACI,qCACI,eAAChC,EAAA,EAAD,CAAKC,UAAWF,EAAQZ,UAAxB,UACI,cAACsD,EAAA,EAAD,CACIC,MAAM,OACNC,WAAY,CAAE1C,UAAWF,EAAQuB,OACjCsB,SAAU,SAACC,GAAD,OAfApD,EAewBoD,EAAEC,OAAOrD,WAdvDqC,EAAQrC,GADa,IAACA,GAgBVQ,UAAWF,EAAQuB,QAEvB,cAACmB,EAAA,EAAD,CACIC,MAAM,UACNC,WAAY,CAAE1C,UAAWF,EAAQuB,OACjCsB,SAAU,SAACC,GAAD,OAjBGpD,EAiBwBoD,EAAEC,OAAOrD,WAhB1DsC,EAAWtC,GADa,IAACA,GAkBbQ,UAAWF,EAAQuB,QAEvB,cAACyB,EAAA,EAAD,CACI9C,UAAWF,EAAQwB,OACnByB,QAAS,kBAAMf,GAAS,IACxBgB,QAAQ,YAHZ,4BAMJ,cAACpD,EAAD,CAAaC,YAAaA,OCxEtC,IAAMb,EAAYC,YAAW,CACzBC,UAAU,CACNqC,OAAO,QACP0B,QAAQ,OACRC,WAAW,SACX1B,MAAO,MACPrC,OAAQ,UAEZgE,cAAc,CACVC,gBAAgB,OAAD,OAASC,EAAT,KACf9B,OAAO,MACPC,MAAM,MACN8B,eAAe,QACflC,aAAc,iBAElBmC,eAAe,CACXC,gBAAgB,UAChBjC,OAAO,MACPC,MAAO,MACPJ,aAAc,mBAkBPqC,EAbA,WACX,IAAM3D,EAAUd,IAChB,OACI,mCACI,eAACe,EAAA,EAAD,CAAKC,UAAWF,EAAQZ,UAAxB,UACI,cAACa,EAAA,EAAD,CAAKC,UAAWF,EAAQqD,gBACxB,cAACpD,EAAA,EAAD,CAAKC,UAAWF,EAAQyD,eAAxB,SACI,cAAC7B,EAAD,YCzBLgC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.29e64e27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/we.258c6241.jpg\";","import axios from \"axios\"\r\n\r\n// const URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n// const URL = \"api.openweathermap.org/data/2.5/forecast/daily\";\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n\r\n\r\n\r\nconst API_KEY = '3d7cc90bab7ac6385fe573ce390a44eb';\r\n\r\n\r\nexport const getData = async (city, country) => {\r\n    return (\r\n\r\n       await axios.get(`${URL}?q=${city},${country}&appid=${API_KEY}&units=metric`)\r\n        \r\n\r\n    )\r\n}","import { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SettingsBrightnessIcon from '@material-ui/icons/SettingsBrightness';\r\nimport { Brightness5, Brightness6, Cloud, Dehaze, Opacity } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        margin: '50px'\r\n    },\r\n    row: {\r\n        padding: 10,\r\n        fontSize: 20,\r\n        letterSpacing: 2\r\n    },\r\n    value: {\r\n        color: 'whitesmoke'\r\n    },\r\n    icon: {\r\n        marginRight: 15,\r\n        color: 'dark orange'\r\n    }\r\n\r\n});\r\n\r\nexport default function Information({ weatherData }) {\r\n    const classes = useStyles();\r\n    return (\r\n        weatherData ?\r\n            <Box className={classes.component}>\r\n                <Typography className={classes.row}><LocationOnIcon className={classes.icon} /> Location <Box className={classes.value} component=\"span\">{weatherData.name}, {weatherData.sys.country}</Box> </Typography>\r\n                <Typography className={classes.row}><SettingsBrightnessIcon className={classes.icon} /> Temperature <Box className={classes.value} component=\"span\">{weatherData.main.temp} Â°C</Box></Typography>\r\n                <Typography className={classes.row}><Opacity className={classes.icon} /> Humidity <Box className={classes.value} component=\"span\">{weatherData.main.humidity} %</Box></Typography>\r\n                <Typography className={classes.row}><Brightness5 className={classes.icon} /> Sun Rise <Box className={classes.value} component=\"span\">{new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()} AM</Box></Typography>\r\n                <Typography className={classes.row}><Brightness6 className={classes.icon} /> Sun Set <Box className={classes.value} component=\"span\">{new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()} PM</Box></Typography>\r\n                <Typography className={classes.row}><Cloud className={classes.icon} /> Clouds <Box className={classes.value} component=\"span\">{weatherData.clouds.all} %</Box></Typography>\r\n                <Typography className={classes.row}><Dehaze className={classes.icon} /> Condition <Box className={classes.value} component=\"span\">{weatherData.weather[0].main}</Box></Typography>\r\n            </Box> : ''\r\n\r\n    )\r\n}\r\n","import { Box, Button, makeStyles, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getData } from '../service/Api';\r\nimport Information from './Information';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        padding: '10px',\r\n        background: 'teal',\r\n        borderRadius: '0 20px 0 0'\r\n\r\n    },\r\n\r\n    input: {\r\n        color: 'white',\r\n        marginRight: '15px'\r\n    },\r\n\r\n    button: {\r\n        height: 40,\r\n        width: 150,\r\n        background: 'teal',\r\n        color: 'white',\r\n        marginTop: 5\r\n    }\r\n\r\n})\r\n\r\nexport default function Form() {\r\n    const classes = useStyles();\r\n    const [weatherData, setWeatherData] = useState();\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [click, setClick] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getWeather = async () => {\r\n            city && await getData(city, country)\r\n                .then(response => {\r\n                    setWeatherData(response.data);\r\n                    console.log(response.data)\r\n                })\r\n        }\r\n        getWeather();\r\n        setClick(false);\r\n    }, [click]);\r\n\r\n    const handleCityChange = (value) => {\r\n        setCity(value);\r\n    }\r\n\r\n    const handleCountryChange = (value) => {\r\n        setCountry(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.component}>\r\n                <TextField\r\n                    label=\"City\"\r\n                    inputProps={{ className: classes.input }}\r\n                    onChange={(e) => handleCityChange(e.target.value)}\r\n                    className={classes.input}\r\n                />\r\n                <TextField\r\n                    label=\"Country\"\r\n                    inputProps={{ className: classes.input }}\r\n                    onChange={(e) => handleCountryChange(e.target.value)}\r\n                    className={classes.input}\r\n                />\r\n                <Button\r\n                    className={classes.button}\r\n                    onClick={() => setClick(true)}\r\n                    variant=\"contained\"\r\n                >Get Weather</Button>\r\n            </Box>\r\n            <Information weatherData={weatherData} />\r\n        </>\r\n    )\r\n}\r\n","import { Box, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport logo from '../images/we.jpg'\r\nimport Form from './Form'\r\n\r\nconst useStyles = makeStyles({\r\n    component:{\r\n        height:'100vh',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        width: '70%',\r\n        margin: '0 auto'\r\n    },\r\n    leftContainer:{\r\n        backgroundImage: `url(${logo})`,\r\n        height:'80%',\r\n        width:'25%',\r\n        backgroundSize:'cover',\r\n        borderRadius: '20px 0 0 20px'\r\n    },\r\n    rightContainer:{\r\n        backgroundColor:'skyblue',\r\n        height:'80%',\r\n        width: '70%',\r\n        borderRadius: '0 20px 20px 0'\r\n\r\n    }\r\n})\r\n\r\nconst Weather= () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Box className={classes.component}> \r\n                <Box className={classes.leftContainer}></Box>\r\n                <Box className={classes.rightContainer}>\r\n                    <Form/>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n} \r\nexport default Weather;","import './App.css';\nimport Weather from './components/Weather';\n\nfunction App() {\n  return (\n    <div>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}